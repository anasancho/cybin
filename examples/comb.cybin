require 'cybin'

Comb={}
Comb.__index=Comb
setmetatable(Comb,{__call=function(cls,...) return cls.new(...) end})
function Comb.new(samps,coef)
   local o={}
   setmetatable(o,Comb)
   o.buf={}
   for i=1,samps do o.buf[i]=0 end
   o.buf=Interp(o.buf)
   o.size=samps
   o.coef=coef
   o.index=0
   return o
end
function Comb:Process(input)
   self.buf[self.index]=input+self.buf[self.index]*self.coef
   local output=self.buf[self.index]
   self.index=self.index+1
   while self.index>self.size do self.index=self.index-self.size end
   return output
end

require 'cybin'
kick=Poly{voice=Sampler,maxVoices=1}
m=Metro()
function __process(sr) m:Process(); local out=kick:Process(); out=math.atan(out*4); return out,out end

m.cps=155/240
pat=P.GenDup(1,8):Integrate():__sub(1)
print(pat)

m.events={}
brk='BREAK.AIF'
m(function(x,s,e)
      if math.floor(s)%2==0 then
	 for i=1,2 do
	    pat=pat:Clump(math.random(2,3)):Shuffle(function(x) return math.random(1,3) end)
	    pat=pat:Flatter()
	 end
	 print(pat)
      end
      m(pat:Slow(1),
	function(x,s,e)
	   kick{sample=brk,env=Env{values={0,1,1,0},durations={1/1000,m:c2s(1/8)-1/500,1/1000}}:Reset(),offset=x/#pat.t,duration=m:c2s(1),pitch=0.7}
	end,1)
      return 1
end)


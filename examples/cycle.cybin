require "cybin"
m=Metro.new()
s=Synth.new()

function tprint(t)
   for i=1,#t do
      print(t[i])
   end
end
_=-1
p={0,3,6,9,6,3}
p.cycle=function(self,callback)
   local events={}
   for i=1,#self do
      local wrapper=function(t)
	 local x=self[i]
	 --print(x)
	 return callback(t,x)
      end
      table.insert(events,{start=(i-1)/#self,func=wrapper})
   end
   return events
end
q={0,3,6,9,12,15,18,21,18,15,12,9,6,3}
q.cycle=p.cycle

e=q:cycle()
for i=1,#e do print(e[i].start) end

function myCycle(t)
--[[
   local events=p:cycle(function(t,x)
	 if x>=0 then for i=1,3 do s:PlayNote(x+25+i*12.01)
   end end end)
--]]
   local n=60
   for i=1,n do m:Event(t+(i-1)/n,function() s:PlayNote(120+i) end) end
   --s:PlayNote(60)
   --m:Event(t+1.5,function() s:PlayNote(47) end)
   --for i=1,#events do m:Event(events[i].start+t,events[i].func) end
--[[
   events=q:cycle(function(t,x)
	 if x>=0 then for i=4,4 do
	       s:PlayNote(x+25+i*12.01)
	 end end
	 print(x)
   end)
   for i=1,#events do m:Event(events[i].start+t,events[i].func) end
--]]
   return 1
end

phase=0
freq=50
env=1
function cycle(t)
   --m:Event(t+myCycle(t),cycle)
end
function __process(sr)
   phase=phase+((freq+100)*math.pow(env,20)/sr)
   --m:Process(sr)
   local o=0--s:Process(sr)
   o=0
   local voices=6
   for i=1,voices do o=o+math.sin(phase*math.pow(3/2,i)*3.145)/voices end
   env=env*0.99999
   return o,o
end
cycle(0)

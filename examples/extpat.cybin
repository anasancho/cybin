require 'cybin'
require 'table-extended'
P=Pat
_=P{}
glass=PolySampler(cybin.loadaudiofile('GLASS.AIF'))
kick=PolySampler(cybin.loadaudiofile('KICK.AIF'))
m=Metro()
offset=0

function __process(sr) m:Process(sr); local out=glass:Process(sr); out=out+kick:Process(sr); return out,out; end

function play(t)
   m:Pat(P{3,0,5,0,10,0,7,0}:expand(1):apply(function(x) return (x+offset)%12 end):slow(2),function(x,t) print(t*8); glass:Play{note2pitch=x+60,speed=0.01,grainsize=5000} end,1)
   --m:Pat(P{1,1},function(x) kick:Play{speed=0.1,pitch=1.5} end,1)
   offset=offset+5
   return 1
end

m.events={}

m:Interval('play')


Env={}
Env.__index=Env
function Env.new(v,d)
   local o={}
   setmetatable(o,Env)
   o.values=v
   o.durations=d
   o.times={}
   local sum=0
   for i=1,#o.durations do
      o.times[i]=sum
      sum=sum+o.durations[i]
   end
   o.times[#o.durations+1]=sum
   o.delta=-1
   o.out=0
   return o
end
function Env:Process(sr)
   local i=1
   if self.delta==-1 then return self.out end
   if self.delta>=self.times[#self.times] then
      self.delta=-1
      self.out=self.values[#self.values]
      return self.out
   end
   for i=1,#self.durations do
      if self.delta<=self.times[i+1] then
	 local interp=(self.delta-self.times[i])/self.durations[i]
	 self.out=self.values[i]*(1-interp)+self.values[i+1]*interp
	 self.delta=self.delta+(1/sr)
	 return self.out
      end
   end
   return self.out
end
e=Env.new({0,1,0.5,0},{0.5,1,5})
e.delta=0
print(e:Process(10))

print(e.durations[1])
print(e.times[2])
print(e.delta)


print(e)

for k,v in pairs(e) do
   print(k,v)
end

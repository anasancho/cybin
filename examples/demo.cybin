require 'cybin'
require 'table-extended'
P=Pat
_=P{}
s=Synth()
m=Metro()
kick=PolySampler(cybin.loadaudiofile('KICK.AIF'))
snare=PolySampler(cybin.loadaudiofile('SNARE.AIF'))
hat=PolySampler(cybin.loadaudiofile('HAT.AIF'))

function __process(sr)
   local out=math.atan(s:Process(sr)*50)*0.3+kick:Process(sr)*1.15+snare:Process(sr)+hat:Process(sr)*0.3
   m:Process(sr)
   return out,out
end

function play(t)
   --local chords=P.genBjork(5,8):integrate():substitute(P{0,3,5,4,-1}):Slow(8)
   local chords=P.GenBjork(3,13):Integrate():Substitute(P{0,3,-1}):Slow(6)
   local bass=(chords:Expand(4)+P{4,0,2,0,3,0}):Degree2Pitch({0,2,3,5,7,8,10}):PitchCompress(45,59)
   --m:Pat(bass,function(x,t) s:PlayNote(x); s:PlayNote(x+19) end,1)
   chords=chords:NoRepeats()+P{P{0,2,4}:P()}
   chords=chords:Degree2Pitch({0,2,3,5,7,8,10},12)+24
   chords=chords:PitchCompress(62,80,12)
   --m:Pat(chords,function(x,t) s:PlayNote(x); end,1)
   --
   local kickPat=P.GenBjork(7,13):Slow(3)
   local snarePat=(1-kickPat):BjorkSelect(2):Replace(0,_)
   kickPat=kickPat:Replace(0,_)
   --m:Pat(kickPat,function(x) kick:Play{speed=0.01} end,1)
   --m:Pat(snarePat,function(x) snare:Play{speed=0.8} end,1)
   --m:Pat(P.GenBjork(13,13):Slow(1.5):Replace(0,_), function(x) hat:Play{pitch=4} end,1)
   return 1
end

function play(t)
   m:Pat(P{1,1},function(x) kick:Play{pitch=0.5,speed=1/128} end,1)
   m:Pat(P{_,1},function(x) snare:Play{} end,1)
   m:Pat(P{_,1}:Fast(2),function(x) hat:Play{pitch=3} end,1)
   m:Pat(P.GenBjork(11,17):Slow(17/4)*32,function(x) s:PlayNote(x) end,1)
   return 1
end

m:Interval('play')

m.events={}

play=nil

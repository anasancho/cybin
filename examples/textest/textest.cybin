dofile('../cybin.cybin')
function display(grid)
   local h=#grid-1
   local w=#grid[1]
   local img={}
   for i=0,w*h do
      local y=math.floor(i/w)+1
      local x=i%w+1
      local val=grid[y][x]
      if val>0 then val=255 else val=0 end
      for j=0,2 do
	 img[i*3+j+1]=val
      end
   end
   cybin.settexture(tex1,0,w,h,img)
end

function makeGrid(w,h)
   local grid={}
   for i=1,h do
      if grid[i]==nil then grid[i]={} end
      for j=1,w do
	 grid[i][j]=math.random(0,1)
      end
   end
   return grid
end

function copyGrid(grid)
   local ret={}
   for i=1,#grid do
      if ret[i]==nil then ret[i]={} end
      for j=1,#grid[i] do
	 ret[i][j]=grid[i][j]
      end
   end
   return ret
end

function updateRow(row,rule,width)
   local ret={}
   for i=1,#row do
      local ruleIndex=0
      for j=0,width do
	 if j==0 then
	    ruleIndex=ruleIndex+wrap(row,i)
	 else
	    ruleIndex=ruleIndex+wrap(row,i+j)*math.pow(2,j*2)
	    ruleIndex=ruleIndex+wrap(row,i-j)*math.pow(2,j*2-1)
	 end
      end
      ret[i]=wrap(rule,ruleIndex)
   end
   return ret
end

function wrap(t,i)
   while i<1 do i=i+#t end
   while i>#t do i=i-#t end
   return t[i]
end

function updateGrid(grid,rule,width)
   local ret=copyGrid(grid)
   for i=#ret,2,-1 do
      ret[i]=ret[i-1]
   end
   ret[1]=updateRow(ret[1],rule,width)
   return ret
end

cybin.loadfragmentshaderfile("textest.frag")
tex1=cybin.getuniformid("tex0")


size=128
g=makeGrid(size,size)

m=Metro()
m.cps=4
count=0
m(function(t)
      if count%100==0 then
	 ruleSize=math.random(2,5)*2+1
	 rule={}
	 for i=1,ruleSize do rule[i]=math.random(0,1) end
	 g[1][1]=math.random(0,1)
      end
      g=updateGrid(g,rule,math.floor(ruleSize/2))
      display(g)
      count=count+1
      return 1/32
end)
function __process() m:Process() end

--[[
dofile('textest.cybin')
--]]



require "cybin"

math.randomseed(os.time())

m=Metro.new()
s=Synth.new()
g=Sampler.new(cybin.loadaudiofile("test.wav"))

function metro(time)
   if play~=nil then play(time) end
end

function wrap(t,i)
   while i>#t do i=i-#t end
   while i<1 do i=i+#t end
   return t[i]
end

function choose(t)
   return t[math.random(1,#t)]
end

function play(time)
   if nindex~=nil then nindex=nindex+1 else nindex=0 end
   s:PlayNote(wrap({7,0,3,0},nindex)+84)
   g.sindex=g.sample.frames*math.floor(math.random(0,4))/8
   g.speed=choose({1,1,1,1,1,1,1,1,1/2,1/4,1/8})
   g.grainsize=choose({1/32,1/64,1/128,1/256,1/512})*g.sample.frames;
   g.pitch=choose({1,1,1,1,1,1,1,4/3,5/4,6/5,3/4,4/5,5/6})
   m:Event(time+1/2,metro)
end

play(0)

--[[

m.events={}
play=nil

--]]

function __process(sr)
   m:Process(sr)
   local drumsl,drumsr=g:Process(sr)
   local mel=s:Process(sr)*1.01
   return drumsl+mel*0,drumsr+mel*0
end

--[[
Env={}
function Env.new(e)
   local o={}
   setmetatable(o,Env)
   o.points=e
   o.delta=-1
   o.out=0
   return o
end
function Env.Process(sr)
   if delta==-1 do return self.out end
   for i=1,#self.points do
      if self.points[i][1]
   end
   return 0
end
--]]

require 'cybin'
require 'seq'
require 'table-extended'
m=Metro()
kick_aif=cybin.loadaudiofile('KICK.AIF')
kick=PolySampler(kick_aif)
P=Pat
S=Seq
function __process(sr)
   m:Process(sr)
   local out=kick:Process(sr)
   return out,out
end
_=P({})
function play(x) print(x); return 1; end
m:Interval('play')
globalrate=2
otherrate=2
function play(time)
   local interval=1
   m:Pat(P({2,1,4}):slow(3*8),function(x) globalrate=x end,interval)
   m:Pat(P({2,1}):slow(16),function(x) otherrate=x end,interval)
   m:Pat(P({1,_,1/90,0.05,_,0.03,0.2,_}):slow(globalrate),function(x) kick:Play({speed=x}) end,interval)
   m:Pat(P(S({1,2,4,8})*1):slow(2),function(x) kick:SetVoices('pitch',x) end,interval)
   m:Pat(P(S({8,10,5,50,15})*100):slow(5*otherrate/8),function(x) kick:SetVoices('grainsize',x) end,interval)
   return interval
end


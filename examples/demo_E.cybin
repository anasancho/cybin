require 'cybin'
glass=PolySampler('GLASS.AIF')
kick=PolySampler('KICK.AIF')
m=Metro()
reverb=Reverb(12,0.9253,1.1234567)

m.cps=160/60

function play(t)
   m:Pat(Pat{0,5,7,-1}:Expand(4):Slow(16),function(prog,s,e)
	    --m:Pat(Pat.GenBjork(2,8):Replace(0,Pat{}):Slow(2),function(v,s,e) kick:Play{pitch=0.65,speed=1} end,t,t+1)
	    m:Pat((Pat{7,0,3,0,5}:Slow(5)+prog+12):PitchCompress(-60,-10):EdoPitch2Freq(0,1),function(v,s,e)
		  glass:Play{pitch=v*1,speed=5};
		  --glass:Play{pitch=v*2,speed=7}
								end,t,t+1)
		end,t,t+1)
   return 1
end

--play=nil

m:Interval('play')

function __process(sr)
   m:Process()
   local out=glass:Process()
   out=out+kick:Process()
   out=reverb:Process(out)*0.15+out
   return out,out
end


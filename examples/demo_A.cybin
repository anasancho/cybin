require 'cybin'
require 'table-extended'
P=Pat
_=P{}
s=SawSynth()
m=Metro()
kick=PolySampler(cybin.loadaudiofile('KICK.AIF'))
snare=PolySampler(cybin.loadaudiofile('SNARE.AIF'))
hat=PolySampler(cybin.loadaudiofile('HAT.AIF'))
comp=Compressor(-20,10,0.0001,0.07,5,48000)
hpass=Filter()
hpass:SetType('highpass')
hpass:SetFreq(60,48000)
env={bassNote=0}

function __process(sr)
   local out=math.atan(s:Process(sr)*50)*0.9
   --out=out+verb:Process(out)*0.8
   out=out*0.3
   out=out+snare:Process(sr)+hat:Process(sr)*0.3
   out=out*0.5
   out=hpass:Process(out)*1.5
   local bd=kick:Process()
   local compd=comp:Process(out,bd)
   compd=compd+bd*0
   m:Process(sr)
   return compd,bd
end

function play(t)
   m:Pat(P{1}:Fast(2),function(x) kick:Play{pitch=0.5,speed=2} end,1)
   m:Pat(P{_,1},function(x) snare:Play{} end,1)
   m:Pat(P{_,1}:Fast(2),function(x) hat:Play{pitch=3,speed=1} end,1)
   m:Pat(P{0,0,3,P{2,1.5,1,0.5}}:Slow(8),function(x) env.bassNote=x end,1)
   m:Pat(P.GenBjork(11,17):Slow(17/4):Replace(0,_),function(x) s:Play{note=env.bassNote+32} end,1)
   return 1
end

m:Interval('play')
